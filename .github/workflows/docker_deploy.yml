name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'

env:
  REGISTRY: docker.io  # 默认为 docker.io，即去 Docker Hub 上找
  IMAGE_NAME: bookstore  # 使用 GitHub Actions 提供的能力，可以自动获取仓库名
  IMAGE_TAG: frontend  # Docker Image 的 tag，为了方便我直接设置 latest
  PORT: 8080  # 服务要暴露的端口，可以改
  DEFAULT_PORT: 80

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
      # 连接到远程服务器
      - name: Connect to server
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
      # 初始化 knownhosts
      - name: Setup knownhosts
        run: ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 触发服务器部署脚本
      - name: Trigger server deployment script
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "docker stop ${{ env.IMAGE_NAME }} || true"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "docker rm ${{ env.IMAGE_NAME }} || true"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "docker run -p ${{ env.PORT }}:${{ env.DEFAULT_PORT}} --name ${{ env.IMAGE_NAME }} -d ${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"